/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

//import controller.JTableController;
//import dao.AlunoDao;
import controller.JTableController;
import dao.LoginDao;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Login;

/**
 *
 * @author Aluno
 */
public class jfrmEditarUsuario extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form jfrmEditarUsuario
     */
    private ArrayList<Login> logins;
    // private jfrmTelaCadastro telaCadastro;

    public jfrmEditarUsuario() {
        initComponents();
        // this.telaCadastro = telaCadastro;
        try {
            LoginDao lg = new LoginDao();
            logins = lg.listar("");
            for (Login l : logins) {
                DefaultTableModel model = (DefaultTableModel) jTableUsuario.getModel();
                Object linha[] = new Object[]{l.getId(), l.getUsuario()};
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar Usuarios.");
        }
        
        Color minhaCor = new Color(255,228,225);
        getContentPane().setBackground(minhaCor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuario = new javax.swing.JTable();
        jTextFieldPesquisa = new javax.swing.JTextField();
        jBExcluirUsuario = new javax.swing.JButton();
        jBAlterarUsuario = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 228, 225));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Editar Usuário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N

        jTableUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableUsuario);

        jTextFieldPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisaActionPerformed(evt);
            }
        });
        jTextFieldPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jTextFieldPesquisa))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jBExcluirUsuario.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBExcluirUsuario.setText("Excluir");
        jBExcluirUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirUsuarioActionPerformed(evt);
            }
        });

        jBAlterarUsuario.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBAlterarUsuario.setText("Alterar");
        jBAlterarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarUsuarioActionPerformed(evt);
            }
        });

        jBCancelar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cao.png"))); // NOI18N
        jLabel1.setText("SYSPET");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(88, 88, 88)
                        .addComponent(jBCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(50, 50, 50)
                        .addComponent(jBExcluirUsuario)
                        .addGap(36, 36, 36)
                        .addComponent(jBAlterarUsuario))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jBCancelar)
                    .addComponent(jBExcluirUsuario)
                    .addComponent(jBAlterarUsuario)
                    .addComponent(jLabel1))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("Editar Usuario");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBAlterarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarUsuarioActionPerformed
        if (jTableUsuario.getSelectedRow() > -1) {
            try {
                Object selectedObject = (Object) jTableUsuario.getModel().getValueAt(jTableUsuario.getSelectedRow(), 1);
                LoginDao ad = new LoginDao();
                Login l;
                int teste = 0;
                
                l = ad.listar(selectedObject.toString(), teste);
                jfrmAlterarUsuario altera = new jfrmAlterarUsuario(this);
                altera.jtxtNomeUsuario.setText(l.getUsuario());
                altera.setId(l.getId());
                altera.show();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Falha ao preencher formulário!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para continuar!");
        }
    }//GEN-LAST:event_jBAlterarUsuarioActionPerformed
    private void fillTable() {
        try {
            ArrayList<Login> loginMatch = new ArrayList<Login>(); //= ad.listar(jTextFieldPesquisa.getText());
            JTableController.limpaJTable(jTableUsuario);
            for (Login l : logins) {
                if (l.getUsuario().toLowerCase().startsWith(jTextFieldPesquisa.getText().toLowerCase())) {
                    loginMatch.add(l);
                }
            }
            for (Login a : loginMatch) {
                DefaultTableModel model = (DefaultTableModel) jTableUsuario.getModel();
                Object linha[] = new Object[]{a.getId(), a.getUsuario()};
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar Usuário.");
        }

    }

    public void atualizaTabela() {
        try {

            DefaultTableModel modelExcluir = (DefaultTableModel) jTableUsuario.getModel();
            while (modelExcluir.getRowCount() > 0) {
                modelExcluir.removeRow(0);
            }
            LoginDao lg3 = new LoginDao();
            logins = lg3.listar("");
            for (Login l3 : logins) {
                DefaultTableModel model = (DefaultTableModel) jTableUsuario.getModel();
                Object linha[] = new Object[]{l3.getId(), l3.getUsuario()};
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar Usuarios.");
        }
    }
    private void jBExcluirUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirUsuarioActionPerformed
        if (jTableUsuario.getSelectedRow() > -1) {
            try {

                Object selectedObject = (Object) jTableUsuario.getModel().getValueAt(jTableUsuario.getSelectedRow(), 1);

                LoginDao lg = new LoginDao();

                Login l;
                int teste = 1;
                l = lg.listar(selectedObject.toString(), teste);
                lg.deletar(l);
                ArrayList<Login> newArrayList = new ArrayList<Login>();
                for (Login login : logins) {
                    if (l.getId() != login.getId()) {
                        newArrayList.add(login);
                    }
                }
                logins = newArrayList;
                JOptionPane.showMessageDialog(null, "Dados Excluidos!");

                atualizaTabela();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Falha ao deletar usuario!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para continuar!");
        }
    }//GEN-LAST:event_jBExcluirUsuarioActionPerformed

    private void jTextFieldPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaKeyPressed
        fillTable();
    }//GEN-LAST:event_jTextFieldPesquisaKeyPressed

    private void jTextFieldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesquisaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterarUsuario;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluirUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsuario;
    private javax.swing.JTextField jTextFieldPesquisa;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object obj) {
        Login login = (Login) obj;
        ArrayList<Login> newArrayList = new ArrayList<Login>();
        for (Login a : logins) {
            if (a.getId() == login.getId()) {
                newArrayList.add(login);
            } else {
                newArrayList.add(a);
            }
        }
        logins = newArrayList;
        fillTable();
        atualizaTabela();

    }
}
