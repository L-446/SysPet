/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.JTableController;
import dao.AdocoesDao;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Observable;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Adocoes;

/**
 *
 * @author leehr
 */
public class jfrmEditarAdocao extends javax.swing.JFrame {

      private ArrayList<Adocoes> adocoes;
    /**
     * Creates new form jfrmEditarAdocao
     */
    public jfrmEditarAdocao() {
        initComponents();

        try {
            AdocoesDao lg = new AdocoesDao();
            adocoes = lg.listar("");
            for (Adocoes a : adocoes) {
                DefaultTableModel model = (DefaultTableModel) tbAdocao.getModel();
                Object linha[] = new Object[]{a.getId(), a.getNome_do_cliente(), a.getPk_id_cliente(), a.getRaca(), a.getPk_id_pet()};
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar Adoções.");
        }
        
        Color minhaCor = new Color(255,228,225);
        getContentPane().setBackground(minhaCor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAdocao = new javax.swing.JTable();
        jTextFieldPesquisa = new javax.swing.JTextField();
        jBCancelar = new javax.swing.JButton();
        jBExcluirUsuario = new javax.swing.JButton();
        jBAlterarUsuario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbAdocao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome do Cliente", "Id do Cliente", "Raça", "Id do Pet"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbAdocao);

        jTextFieldPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisaActionPerformed(evt);
            }
        });
        jTextFieldPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
                    .addComponent(jTextFieldPesquisa)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBExcluirUsuario.setText("Excluir");
        jBExcluirUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirUsuarioActionPerformed(evt);
            }
        });

        jBAlterarUsuario.setText("Alterar");
        jBAlterarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBCancelar)
                        .addGap(56, 56, 56)
                        .addComponent(jBExcluirUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBAlterarUsuario)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBExcluirUsuario)
                    .addComponent(jBAlterarUsuario))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBExcluirUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirUsuarioActionPerformed
        if (tbAdocao.getSelectedRow() > -1) {
            try {

                Object selectedObject = (Object) tbAdocao.getModel().getValueAt(tbAdocao.getSelectedRow(), 1);

                AdocoesDao ad = new AdocoesDao();

                Adocoes a;
                int teste = 1;
                a = ad.listar(selectedObject.toString(),teste);
                ad.deletar(a);
                ArrayList<Adocoes> newArrayList = new ArrayList<Adocoes>();
                for (Adocoes adocao : adocoes) {
                    if (a.getId() != adocao.getId()) {
                        newArrayList.add(adocao);
                    }
                }
                adocoes = newArrayList;
                JOptionPane.showMessageDialog(null, "Dados Excluidos!");

                atualizaTabela();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Falha ao deletar usuario!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para continuar!");
        }
    }//GEN-LAST:event_jBExcluirUsuarioActionPerformed

      private void fillTable() {
        try {
            ArrayList<Adocoes> adocaoMatch = new ArrayList<Adocoes>(); //= ad.listar(jTextFieldPesquisa.getText());
            JTableController.limpaJTable(tbAdocao);
            for (Adocoes a : adocoes) {
                if (a.getNome_do_cliente().toLowerCase().startsWith(jTextFieldPesquisa.getText().toLowerCase())) {
                    adocaoMatch.add(a);
                }
            }
            for (Adocoes a : adocaoMatch) {
                DefaultTableModel model = (DefaultTableModel) tbAdocao.getModel();
                Object linha[] = new Object[]{a.getId(),a.getNome_do_cliente(), a.getPk_id_cliente(), a.getRaca(), a.getPk_id_pet()};
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar Usuário.");
        }

    }

    public void atualizaTabela() {
        try {

            DefaultTableModel modelExcluir = (DefaultTableModel) tbAdocao.getModel();
            while (modelExcluir.getRowCount() > 0) {
                modelExcluir.removeRow(0);
            }
            AdocoesDao adc = new AdocoesDao();
            adocoes = adc.listar("");
            for (Adocoes ad : adocoes) {
                DefaultTableModel model = (DefaultTableModel) tbAdocao.getModel();
                Object linha[] = new Object[]{ad.getId(), ad.getNome_do_cliente(), ad.getPk_id_cliente(), ad.getRaca(), ad.getPk_id_pet() };
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar ADOÇÕES.");
        }
    }
    
    private void jBAlterarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarUsuarioActionPerformed
        if (tbAdocao.getSelectedRow() > -1) {
            try {
                Object selectedObject = (Object) tbAdocao.getModel().getValueAt(tbAdocao.getSelectedRow(), 1);
                AdocoesDao ad = new AdocoesDao();
                Adocoes l;
                int teste = 0;

                l = ad.listar(selectedObject.toString(), teste);
                jfrmAlterarAdocao altera = new jfrmAlterarAdocao(this);
                altera.jtxtNomeCliente.setText(l.getNome_do_cliente());
                altera.jtxtIdCliente.setText(Integer.toString(l.getPk_id_cliente()));
                altera.jtxtRaca.setText(l.getRaca());
                altera.jtxtIdPet.setText(Integer.toString(l.getPk_id_pet()));
                
                altera.setId(l.getId());
                altera.show();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Falha ao preencher formulário!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para continuar!");
        }
    }//GEN-LAST:event_jBAlterarUsuarioActionPerformed

    private void jTextFieldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesquisaActionPerformed

    private void jTextFieldPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaKeyPressed
        fillTable();
    }//GEN-LAST:event_jTextFieldPesquisaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfrmEditarAdocao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfrmEditarAdocao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfrmEditarAdocao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfrmEditarAdocao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfrmEditarAdocao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterarUsuario;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBExcluirUsuario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldPesquisa;
    private javax.swing.JTable tbAdocao;
    // End of variables declaration//GEN-END:variables
    
    public void update(Observable o, Object obj) {
        Adocoes adocao = (Adocoes) obj;
        ArrayList<Adocoes> newArrayList = new ArrayList<Adocoes>();
        for (Adocoes a : adocoes) {
            if (a.getId() == adocao.getId()) {
                newArrayList.add(adocao);
            } else {
                newArrayList.add(a);
            }
        }
        adocoes = newArrayList;
        fillTable();
        atualizaTabela();

    }
}

