/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.JTableController;
import dao.ClienteDao;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cliente;

/**
 *
 * @author leehr
 */
public class jfrmEditarCliente extends javax.swing.JFrame {

    private ArrayList<Cliente> clientes;
    /**
     * Creates new form jfrmEditarCliente
     */
     public jfrmEditarCliente() {
        initComponents();
        // this.telaCadastro = telaCadastro;
        try {
            ClienteDao cd = new ClienteDao();
            clientes = cd.listar("");
            for (Cliente c : clientes) {
                DefaultTableModel model = (DefaultTableModel) tbCliente.getModel();
                Object linha[] = new Object[]{c.getId(), c.getNome(), c.getIdade(), c.getCpf(), c.getEndereco(), c.getNumero()};
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar Cliente." +ex);
        }
        
        Color minhaCor = new Color(255,228,225);
        getContentPane().setBackground(minhaCor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable();
        jTextFieldPesquisa = new javax.swing.JTextField();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tbCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome do Cliente", "Idade", "N° do CPF", "Endereço", "N°"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbCliente);

        jTextFieldPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisaActionPerformed(evt);
            }
        });
        jTextFieldPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                    .addComponent(jTextFieldPesquisa))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbCancelar)
                .addGap(66, 66, 66)
                .addComponent(jbExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAlterar)
                    .addComponent(jbExcluir)
                    .addComponent(jbCancelar))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesquisaActionPerformed

    private void jTextFieldPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaKeyPressed
        fillTable();
    }//GEN-LAST:event_jTextFieldPesquisaKeyPressed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
          if (tbCliente.getSelectedRow() > -1) {
            try {
                Object selectedObject = (Object) tbCliente.getModel().getValueAt(tbCliente.getSelectedRow(), 1);
                ClienteDao ad = new ClienteDao();
                Cliente c;
                int teste = 0;
                
                c = ad.listar(selectedObject.toString(), teste);
                jfrmAlterarCliente altera = new jfrmAlterarCliente(this);
                
                altera.jtxtNome.setText(c.getNome());
                altera.jtxtIdade.setText(String.valueOf(c.getIdade()));
                altera.jtxtDoc.setText(String.valueOf(c.getCpf()));
                altera.jtxtEndereco.setText(c.getEndereco());
                altera.jtxtNumero.setText(String.valueOf(c.getNumero()));
              
                altera.setId(c.getId());
                altera.show();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para continuar!");
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
      dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
       if (tbCliente.getSelectedRow() > -1) {
           
            try {

                Object selectedObject = (Object) tbCliente.getModel().getValueAt(tbCliente.getSelectedRow(), 1);

                ClienteDao Cd = new ClienteDao();

                Cliente l;
                int teste = 1;
                l = Cd.listar(selectedObject.toString(), teste);
                Cd.deletar(l);
                ArrayList<Cliente> newArrayList = new ArrayList<Cliente>();
                for (Cliente pt : clientes) {
                    if (l.getId() != pt.getId()) {
                        newArrayList.add(pt);
                    }
                }
                clientes = newArrayList;
                JOptionPane.showMessageDialog(null, "Dados Excluidos!");

                atualizaTabela();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Falha ao deletar Cliente!" );
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha para continuar!");
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void fillTable() {
        try {
            ArrayList<Cliente> clienteMatch = new ArrayList<Cliente>(); //= ad.listar(jTextFieldPesquisa.getText());
            JTableController.limpaJTable(tbCliente);
            for (Cliente c : clientes) {
                if (c.getNome().toLowerCase().startsWith(jTextFieldPesquisa.getText().toLowerCase())) {
                    clienteMatch.add(c);
                }
            }
            for (Cliente cl : clienteMatch) {
                DefaultTableModel model = (DefaultTableModel) tbCliente.getModel();
                Object linha[] = new Object[]{cl.getId(), cl.getNome(), cl.getIdade(), cl.getCpf(), cl.getEndereco(), cl.getNumero()};
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar Cliente.");
        }

    }

    public void atualizaTabela() {
        try {

            DefaultTableModel modelExcluir = (DefaultTableModel) tbCliente.getModel();
            while (modelExcluir.getRowCount() > 0) {
                modelExcluir.removeRow(0);
            }
            ClienteDao cd = new ClienteDao();
            clientes = cd.listar("");
            for (Cliente cls : clientes) {
                DefaultTableModel model = (DefaultTableModel) tbCliente.getModel();
                Object linha[] = new Object[]{cls.getId(), cls.getNome(), cls.getIdade(), cls.getCpf(), cls.getEndereco(), cls.getNumero()};
                model.addRow(linha);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar Cliente.");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfrmEditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfrmEditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfrmEditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfrmEditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfrmEditarCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldPesquisa;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JTable tbCliente;
    // End of variables declaration//GEN-END:variables
}
